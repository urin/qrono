{
  "version": 3,
  "sources": ["../src/helpers.js", "../src/qrono.js"],
  "sourcesContent": ["export const epoch = new Date(0)\n\n// When creating or updating a local time, both `Date.setFullYear` and `Date.setHours` are used.\n// Noon is used as the initial reference point to avoid the time after `setFullYear`\n// from falling into an ambiguous DST period. Historically, DST transitions in all countries\n// have been scheduled around midnight, and it should be the same in the future.\n// The reason for selecting 1915 as the initial value is as follows.\n// Since DST was first established in 1916, the initial value should be set to a year prior to that.\n// If a year too far in the past is chosen, it may correspond to a period when time zones were not yet\n// precisely defined in some regions, which could result in unexpected timezone offsets.\nexport const initialSafeDate = new Date(1915, 0, 1, 12, 0, 0, 0)\n\nexport const daysPerWeek = 7\nexport const hoursPerDay = 24\nexport const hoursPerWeek = hoursPerDay * daysPerWeek\nexport const minutesPerHour = 60\nexport const minutesPerDay = minutesPerHour * hoursPerDay\nexport const minutesPerWeek = minutesPerDay * daysPerWeek\nexport const secondsPerMinute = 60\nexport const secondsPerHour = secondsPerMinute * minutesPerHour\nexport const secondsPerDay = secondsPerHour * hoursPerDay\nexport const secondsPerWeek = secondsPerDay * daysPerWeek\nexport const millisecondsPerSecond = 1000\nexport const millisecondsPerMinute = secondsPerMinute * millisecondsPerSecond\nexport const millisecondsPerHour = secondsPerHour * millisecondsPerSecond\nexport const millisecondsPerDay = secondsPerDay * millisecondsPerSecond\nexport const millisecondsPerWeek = secondsPerWeek * millisecondsPerSecond\n\nexport const monday = 1\nexport const tuesday = 2\nexport const wednesday = 3\nexport const thursday = 4\nexport const friday = 5\nexport const saturday = 6\nexport const sunday = 7\n\nexport function has (object, ...keys) {\n  return keys.flat().some(object.hasOwnProperty, object)\n}\n\nexport function fields (object) {\n  return Object.entries(object).filter(\n    ([, value]) => !isFunction(value)\n  ).map(([key]) => key)\n}\n\nexport function given (arg) {\n  return arg !== undefined\n}\n\nexport function isFunction (a) {\n  return a instanceof Function\n}\n\nexport function isString (a) {\n  return typeof a === 'string' || a instanceof String\n}\n\nexport function isObject (a) {\n  return a !== null && typeof (a) === 'object' && a.constructor === Object\n}\n\nexport function isValidDate (date) {\n  return !isNaN(date.getTime())\n}\n\nexport function hasDateField (object) {\n  return has(object, ['year', 'month', 'day'])\n}\n\nexport function hasTimeField (object) {\n  return has(object, ['hour', 'minute', 'second', 'millisecond'])\n}\n\nexport function hasDatetimeField (object) {\n  return has(object, [\n    'year', 'month', 'day', 'hour', 'minute', 'second', 'millisecond'\n  ])\n}\n\nexport function asDst (ambiguousAsDst, date) {\n  const numeric = date.getTime()\n  const result = new Date(numeric)\n  const adjacentDay = new Date(numeric)\n  const sign = ambiguousAsDst ? 1 : -1\n  adjacentDay.setDate(date.getDate() + sign)\n  const adjust = adjacentDay.getTimezoneOffset() - date.getTimezoneOffset()\n  if ((ambiguousAsDst && adjust < 0) || (!ambiguousAsDst && adjust > 0)) {\n    const adjusted = new Date(numeric).setMinutes(date.getMinutes() + sign * adjust)\n    const adjustedUTC = new Date(numeric).setUTCMinutes(date.getUTCMinutes() + sign * adjust)\n    if (adjusted !== adjustedUTC && (adjusted - adjustedUTC) / millisecondsPerMinute !== adjust) {\n      result.setUTCMinutes(date.getUTCMinutes() + sign * adjust)\n    }\n  }\n  return result\n}\n", "/* @ts-self-types=\"../types/qrono.d.ts\" */\nimport {\n  has,\n  given,\n  fields,\n  isObject,\n  isString,\n  isValidDate,\n  asDst,\n  hasDatetimeField,\n  initialSafeDate,\n  daysPerWeek,\n  minutesPerDay,\n  minutesPerHour,\n  millisecondsPerMinute,\n  millisecondsPerDay,\n  monday,\n  tuesday,\n  wednesday,\n  thursday,\n  friday,\n  saturday,\n  sunday\n} from './helpers.js'\n\n// -----------------------------------------------------------------------------\n// Exports\n// -----------------------------------------------------------------------------\nconst qrono = Qrono\n\nexport { qrono }\n\nexport {\n  monday,\n  tuesday,\n  wednesday,\n  thursday,\n  friday,\n  saturday,\n  sunday\n} from './helpers'\n\n// -----------------------------------------------------------------------------\n// Static\n// -----------------------------------------------------------------------------\nQrono.date = QronoDate\n\n// NOTE Must be flat object for shallow cloning.\nconst defaultContext = {\n  localtime: false,\n  ambiguousAsDst: false\n}\n\nfields(defaultContext).forEach(key => {\n  Qrono[key] = function (arg) {\n    if (given(arg)) {\n      defaultContext[key] = arg\n      return this\n    }\n    return defaultContext[key]\n  }\n})\n\nQrono.context = function (context) {\n  if (given(context)) {\n    fields(defaultContext).filter(key => has(context, key)).forEach(key => {\n      defaultContext[key] = context[key]\n    })\n    return this\n  }\n  return { ...defaultContext }\n}\n\nQrono.asUtc = function () {\n  defaultContext.localtime = false\n  return this\n}\n\nQrono.asLocaltime = function () {\n  defaultContext.localtime = true\n  return this\n}\n\nObject.assign(\n  Qrono,\n  { monday, tuesday, wednesday, thursday, friday, saturday, sunday }\n)\n\n// -----------------------------------------------------------------------------\n// Constructor\n// -----------------------------------------------------------------------------\nconst internal = Symbol('Qrono.internal')\n\nfunction Qrono (...args) {\n  if (!new.target) { return new Qrono(...args) }\n  const self = this[internal] = {\n    // properties\n    nativeDate: null,\n    localtime: false,\n    ambiguousAsDst: false,\n    // methods\n    set,\n    parse,\n    valid,\n    context,\n    getNative\n  }\n\n  // Construction\n  self.context(defaultContext)\n  if (args[0] instanceof Qrono) {\n    const source = args.shift()\n    fields(self).forEach(key => { self[key] = source[key]() })\n  }\n  if (isObject(args[0]) && !hasDatetimeField(args[0])) {\n    self.context(args.shift())\n  }\n  const first = args[0]\n  const second = args[1]\n  if (first == null) {\n    self.nativeDate ??= new Date()\n  } else if (first instanceof Date) {\n    self.nativeDate = new Date(first.getTime())\n  } else if (isString(first)) {\n    self.parse(first)\n  } else if (isObject(first)) {\n    if (!hasDatetimeField(first)) {\n      throw RangeError('Missing time field' +\n        ' (year, minute, day, hour, minute, second or millisecond)'\n      )\n    }\n    self.set(first)\n  } else if (Number.isFinite(first) && !Number.isFinite(second)) {\n    self.nativeDate = new Date(first)\n  } else if (Number.isFinite(first) || Array.isArray(first)) {\n    const values = args.flat().filter(v => Number.isSafeInteger(v))\n    if (values.length !== args.flat().length) {\n      throw RangeError('Should be safe integers')\n    }\n    if (values.length > 7) {\n      throw RangeError('Too many numbers')\n    }\n    self.set({\n      year: values[0],\n      month: values[1],\n      day: values[2],\n      hour: values[3],\n      minute: values[4],\n      second: values[5],\n      millisecond: values[6]\n    })\n  } else {\n    throw TypeError(`Invalid argument ${args}`)\n  }\n  return this\n}\n\n// -----------------------------------------------------------------------------\n// Private methods\n// -----------------------------------------------------------------------------\nfunction valid () {\n  return isValidDate(this.nativeDate)\n}\n\nfunction context (context) {\n  if (!context) { return }\n  fields(defaultContext).filter(key => has(context, key)).forEach(key => {\n    this[key] = context[key]\n  })\n  return this\n}\n\nfunction getNative (name) {\n  return this.nativeDate[`get${this.localtime ? '' : 'UTC'}${name}`]()\n}\n\nfunction set (values) {\n  const args = { ...values }\n  args.month = args.month && args.month - 1\n  if (this.localtime) {\n    const baseDate = this.nativeDate ?? new Date(0, 0)\n    const newDate = new Date(initialSafeDate.getTime())\n    newDate.setFullYear(\n      args.year ?? baseDate.getFullYear(),\n      args.month ?? baseDate.getMonth(),\n      args.day ?? baseDate.getDate()\n    )\n    newDate.setHours(\n      args.hour ?? baseDate.getHours(),\n      args.minute ?? baseDate.getMinutes(),\n      args.second ?? baseDate.getSeconds(),\n      args.millisecond ?? baseDate.getMilliseconds()\n    )\n    this.nativeDate = asDst(this.ambiguousAsDst, newDate)\n  } else {\n    const baseDate = this.nativeDate ?? new Date(0)\n    const newDate = new Date(0)\n    newDate.setUTCFullYear(\n      args.year ?? baseDate.getUTCFullYear(),\n      args.month ?? baseDate.getUTCMonth(),\n      args.day ?? baseDate.getUTCDate()\n    )\n    newDate.setUTCHours(\n      args.hour ?? baseDate.getUTCHours(),\n      args.minute ?? baseDate.getUTCMinutes(),\n      args.second ?? baseDate.getUTCSeconds(),\n      args.millisecond ?? baseDate.getUTCMilliseconds()\n    )\n    this.nativeDate = newDate\n  }\n  return this\n}\n\nconst parsePattern = new RegExp(\n  // yyyy[[-|/]MM[[-|/]DD]]\n  '^(\\\\d{4})(?:[-/]?([0-2]?\\\\d)(?:[-/]?([0-3]?\\\\d))?)?' +\n  // [(T| )HH[:]mm[[:]ss[(.|:)SSS]]]\n  '(?:[T\\\\s]([0-2]?\\\\d)(?::([0-5]?\\\\d)?(?::([0-6]?\\\\d)?(?:[.:](\\\\d{1,3})?\\\\d*)?)?)?)?' +\n  // [Z|(+|-)hh:mm]\n  '(Z|[-+]\\\\d{2}:?\\\\d{2})?$'\n)\n\nfunction parse (str) {\n  const text = str.trim().toUpperCase()\n  const values = text.match(parsePattern)\n  if (!values) {\n    throw RangeError(\n      `Failed to parse '${str}'.` +\n      ' Should be yyyy[[-|/]MM[[-|/]DD]][(T| )HH:mm[:ss[(.|:)SSS]]][Z|(+|-)hh:mm]'\n    )\n  }\n  const [year, month, day, hour, minute, second, millisecond, offset] = [\n    +values[1], +values[2] || 1, +values[3] || 1,\n    +values[4] || 0, +values[5] || 0, +values[6] || 0,\n    +values[7]?.padStart(3, '0') || 0,\n    values[8]\n  ]\n  const native = new Date(text)\n  if (!isValidDate(native)) {\n    throw RangeError(\n      `Failed to parse '${str}' by Date.` +\n      ' Should be yyyy[[-|/]MM[[-|/]DD]][(T| )HH:mm[:ss[(.|:)SSS]]][Z|(+|-)hh:mm]'\n    )\n  }\n  if (offset) {\n    this.nativeDate = native\n  } else if (this.localtime) {\n    this.nativeDate = asDst(this.ambiguousAsDst, native)\n  } else {\n    this.set({ year, month, day, hour, minute, second, millisecond })\n  }\n  return this\n}\n\n// -----------------------------------------------------------------------------\n// Public methods\n// -----------------------------------------------------------------------------\n// Basic\nQrono.prototype.toString = function () {\n  if (this[internal].localtime) {\n    const t = this[internal].nativeDate\n    const offset = -t.getTimezoneOffset()\n    const offsetAbs = Math.abs(offset)\n    return `${String(t.getFullYear()).padStart(4, '0')\n      }-${String(t.getMonth() + 1).padStart(2, '0')\n      }-${String(t.getDate()).padStart(2, '0')\n      }T${String(t.getHours()).padStart(2, '0')\n      }:${String(t.getMinutes()).padStart(2, '0')\n      }:${String(t.getSeconds()).padStart(2, '0')\n      }.${String(t.getMilliseconds()).padStart(3, '0')\n      }${(offset >= 0 ? '+' : '-') +\n      String(Math.trunc(offsetAbs / minutesPerHour)).padStart(2, '0') +\n      ':' + String(offsetAbs % minutesPerHour).padStart(2, '0')\n      }`\n  }\n  return this[internal].nativeDate.toISOString()\n}\n\nQrono.prototype.valueOf = function () {\n  return this[internal].nativeDate.valueOf()\n}\n\nQrono.prototype.clone = function (...args) {\n  return new Qrono(this, ...args)\n}\n\nQrono.prototype.context = function (context) {\n  return given(context)\n    ? this.clone(context)\n    : { localtime: this[internal].localtime, ambiguousAsDst: this[internal].ambiguousAsDst }\n}\n\nQrono.prototype.nativeDate = function () {\n  return new Date(this[internal].nativeDate.getTime())\n}\n\nQrono.prototype.offset = function () {\n  return (\n    this[internal].localtime ? -this[internal].nativeDate.getTimezoneOffset() : 0\n  )\n}\n\nQrono.prototype.localtime = function (arg) {\n  return given(arg) ? this.clone({ localtime: arg }) : this[internal].localtime\n}\n\nQrono.prototype.ambiguousAsDst = function (arg) {\n  return given(arg) ? this.clone({ ambiguousAsDst: arg }) : this[internal].ambiguousAsDst\n}\n\nQrono.prototype.valid = function () {\n  return this[internal].valid()\n}\n\n// Transform\nQrono.prototype.numeric = function () {\n  return this[internal].nativeDate.getTime()\n}\n\nQrono.prototype.toObject = function () {\n  return {\n    year: this.year(),\n    month: this.month(),\n    day: this.day(),\n    hour: this.hour(),\n    minute: this.minute(),\n    second: this.second(),\n    millisecond: this.millisecond()\n  }\n}\n\nQrono.prototype.toArray = function () {\n  return [\n    this.year(),\n    this.month(),\n    this.day(),\n    this.hour(),\n    this.minute(),\n    this.second(),\n    this.millisecond()\n  ]\n}\n\nQrono.prototype.toDate = function (...args) {\n  return new QronoDate(this.clone(...args))\n}\n\n// Context\nQrono.prototype.asUtc = function () {\n  return this.clone({ localtime: false })\n}\n\nQrono.prototype.asLocaltime = function () {\n  return this.clone({ localtime: true })\n}\n\n// Accessor\nQrono.prototype.year = function (value) {\n  return given(value)\n    ? this.clone({ year: value })\n    : this[internal].getNative('FullYear')\n}\n\nQrono.prototype.month = function (value) {\n  return given(value)\n    ? this.clone({ month: value })\n    : this[internal].getNative('Month') + 1\n}\n\nQrono.prototype.day = function (value) {\n  return given(value)\n    ? this.clone({ day: value })\n    : this[internal].getNative('Date')\n}\n\nQrono.prototype.hour = function (value) {\n  return given(value)\n    ? this.clone({ hour: value })\n    : this[internal].getNative('Hours')\n}\n\nQrono.prototype.minute = function (value) {\n  return given(value)\n    ? this.clone({ minute: value })\n    : this[internal].getNative('Minutes')\n}\n\nQrono.prototype.second = function (value) {\n  return given(value)\n    ? this.clone({ second: value })\n    : this[internal].getNative('Seconds')\n}\n\nQrono.prototype.millisecond = function (value) {\n  return given(value)\n    ? this.clone({ millisecond: value })\n    : this[internal].getNative('Milliseconds')\n}\n\n// Getter\nQrono.prototype.dayOfWeek = function () {\n  return (\n    1 + (this[internal].getNative('Day') - 1 + daysPerWeek) % daysPerWeek\n  )\n}\n\nQrono.prototype.dayOfYear = function () {\n  const date = this.toDate()\n  return 1 + date - date.startOfYear()\n}\n\nQrono.prototype.weekOfYear = function () {\n  const date = this.toDate()\n  const theThursday = date.day(date.day() - date.dayOfWeek() + thursday)\n  const startOfYear = theThursday.startOfYear()\n  const firstThursday = (startOfYear.dayOfWeek() === thursday)\n    ? startOfYear\n    : startOfYear.day(\n      1 + ((thursday - startOfYear.dayOfWeek() + daysPerWeek) % daysPerWeek)\n    )\n  return 1 + Math.ceil((theThursday - firstThursday) / daysPerWeek)\n}\n\nQrono.prototype.yearOfWeek = function () {\n  const date = this.toDate()\n  return date.day(date.day() - date.dayOfWeek() + thursday).year()\n}\n\nQrono.prototype.isLeapYear = function () {\n  const year = this.year()\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0)\n}\n\nQrono.prototype.hasDstInYear = function () {\n  if (!this[internal].localtime) { return false }\n  const currentOffset = this.offset()\n  return [3, 6, 9, 12].map(\n    month => this.month(month).offset()\n  ).some(offset => offset !== currentOffset)\n}\n\nQrono.prototype.isInDst = function () {\n  if (!this[internal].localtime) { return false }\n  return (\n    this.offset() ===\n    Math.max(...[3, 6, 9, 12].map(month => this.month(month).offset()))\n  )\n}\n\nQrono.prototype.isDstTransitionDay = function () {\n  if (!this[internal].localtime) { return false }\n  return this.minutesInDay() !== minutesPerDay\n}\n\nQrono.prototype.minutesInDay = function () {\n  if (!this[internal].localtime) { return minutesPerDay }\n  const startOfDay = this.startOfDay()\n  const nextDay = startOfDay.plus({ day: 1 }).startOfDay()\n  if (startOfDay.day() === nextDay.day()) {\n    return minutesPerDay\n  }\n  return (nextDay - startOfDay) / millisecondsPerMinute\n}\n\nQrono.prototype.daysInMonth = function () {\n  const days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n  const month = this.month()\n  return days[month - 1] + (this.isLeapYear() && month === 2 ? 1 : 0)\n}\n\nQrono.prototype.daysInYear = function () {\n  return this.isLeapYear() ? 366 : 365\n}\n\nQrono.prototype.weeksInYear = function () {\n  const endOfYear = this.toDate({ month: 12, day: 31 })\n  const endOfLastYear = endOfYear.minus({ year: 1 })\n  if (endOfYear.dayOfWeek() === thursday || endOfLastYear.dayOfWeek() === wednesday) {\n    return 53\n  }\n  return 52\n}\n\nQrono.prototype.startOfYear = function () {\n  return this.clone({\n    month: 1, day: 1, hour: 0, minute: 0, second: 0, millisecond: 0\n  })\n}\n\nQrono.prototype.startOfMonth = function () {\n  return this.clone({\n    day: 1, hour: 0, minute: 0, second: 0, millisecond: 0\n  })\n}\n\nQrono.prototype.startOfDay = function () {\n  return this.clone({\n    hour: 0, minute: 0, second: 0, millisecond: 0\n  })\n}\n\nQrono.prototype.startOfHour = function () {\n  return this.clone({\n    minute: 0, second: 0, millisecond: 0\n  })\n}\n\nQrono.prototype.startOfMinute = function () {\n  return this.clone({\n    second: 0, millisecond: 0\n  })\n}\n\nQrono.prototype.startOfSecond = function () {\n  return this.clone({\n    millisecond: 0\n  })\n}\n\nQrono.prototype.isSame = function (another) { return +this === +another }\nQrono.prototype.isBefore = function (another) { return this < another }\nQrono.prototype.isAfter = function (another) { return this > another }\nQrono.prototype.isSameOrBefore = function (another) { return this <= another }\nQrono.prototype.isSameOrAfter = function (another) { return this >= another }\nQrono.prototype.isBetween = function (a, b) {\n  return (a <= this && this <= b) || (b <= this && this <= a)\n}\n\n// Calculation\nQrono.prototype.plus = function (...args) {\n  return plus.call(this, 1, ...args)\n}\n\nQrono.prototype.minus = function (...args) {\n  return plus.call(this, -1, ...args)\n}\n\nfunction plus (sign, ...args) {\n  const arg0 = args[0]\n  const arg1 = args[1]\n  if (Number.isFinite(arg0) && !Number.isFinite(arg1)) {\n    return this.clone(this.numeric() + arg0)\n  }\n  let timeFields = null\n  if (isObject(arg0)) {\n    if (!hasDatetimeField(arg0)) {\n      throw RangeError('Missing time field' +\n        ' (year, minute, day, hour, minute, second or millisecond)'\n      )\n    }\n    timeFields = arg0\n  } else if (Number.isFinite(arg0) || Array.isArray(arg0)) {\n    const values = args.flat().filter(v => Number.isSafeInteger(v))\n    if (values.length !== args.flat().length) {\n      throw RangeError('Should be safe integers')\n    }\n    if (values.length > 7) {\n      throw RangeError('Too many numbers')\n    }\n    timeFields = {\n      year: args[0],\n      month: args[1],\n      day: args[2],\n      hour: args[3],\n      minute: args[4],\n      second: args[5],\n      millisecond: args[6]\n    }\n  } else {\n    throw TypeError()\n  }\n  const date = this.nativeDate()\n  const utc = this[internal].localtime ? '' : 'UTC'\n  if (has(timeFields, 'year') || has(timeFields, 'month')) {\n    const year = this.year() + sign * (timeFields.year ?? 0)\n    const month = this.month() + sign * (timeFields.month ?? 0)\n    const endOfMonth = new Date(date.getTime())\n    endOfMonth[`set${utc}FullYear`](year, month, 0)\n    const lastDay = endOfMonth.getDate()\n    if (lastDay < this.day()) {\n      date[`set${utc}FullYear`](year, endOfMonth[`get${utc}Month`](), lastDay)\n    } else {\n      date[`set${utc}FullYear`](year, month - 1)\n    }\n  }\n  if (has(timeFields, 'day')) {\n    date[`set${utc}Date`](date[`get${utc}Date`]() + sign * timeFields.day)\n  }\n  [\n    ['hour', 'Hours'], ['minute', 'Minutes'],\n    ['second', 'Seconds'], ['millisecond', 'Milliseconds']\n  ].forEach(([key, nativeKey]) => {\n    if (has(timeFields, key)) {\n      date[`setUTC${nativeKey}`](\n        date[`getUTC${nativeKey}`]() + sign * timeFields[key]\n      )\n    }\n  })\n  return this.clone(asDst(this[internal].ambiguousAsDst, date))\n}\n\n// -----------------------------------------------------------------------------\n// QronoDate Class\n// -----------------------------------------------------------------------------\nconst internalDate = Symbol('QronoDate.internal')\n\nfunction QronoDate (...args) {\n  if (!new.target) { return new QronoDate(...args) }\n  const self = this[internalDate] = {\n    datetime: null\n  }\n  let source = null\n  if (args[0] instanceof QronoDate) {\n    source = args.shift().toDatetime()\n  }\n  const first = args[0]\n  const second = args[1]\n  if (Number.isFinite(first) && !Number.isFinite(second)) {\n    args[0] *= millisecondsPerDay\n  }\n  source = (\n    source ? source.clone(...args) : qrono(...args)\n  ).startOfDay()\n  self.datetime = qrono({ localtime: false }, source.toObject())\n  return this\n}\n\nQronoDate.prototype.toString = function () {\n  return this[internalDate].datetime.toString().substring(0, 10)\n}\n\nQronoDate.prototype.valueOf = function () {\n  return this[internalDate].datetime / millisecondsPerDay\n}\n\nQronoDate.prototype.clone = function (...args) {\n  return new QronoDate(this, ...args)\n}\n\nQronoDate.prototype.toDatetime = function () {\n  return qrono(this[internalDate].datetime.toArray())\n}\n\nQronoDate.prototype.numeric = function () {\n  return this[internalDate].datetime.numeric() / millisecondsPerDay\n}\n\nQronoDate.prototype.startOfYear = function () {\n  return new QronoDate(this[internalDate].datetime.startOfYear())\n}\n\nQronoDate.prototype.startOfMonth = function () {\n  return new QronoDate(this[internalDate].datetime.startOfMonth())\n}\n\n;['year', 'month', 'day'].forEach(field => {\n  QronoDate.prototype[field] = function (value) {\n    if (given(value)) {\n      return new QronoDate(this[internalDate].datetime[field](value))\n    }\n    return this[internalDate].datetime[field]()\n  }\n})\n\n;[\n  'dayOfWeek', 'dayOfYear', 'weekOfYear', 'yearOfWeek',\n  'isLeapYear', 'daysInMonth', 'daysInYear', 'weeksInYear'\n].forEach(method => {\n  QronoDate.prototype[method] = function () {\n    return this[internalDate].datetime[method]()\n  }\n})\n\nQronoDate.prototype.isDstTransitionDay = function () {\n  return this[internalDate].datetime.localtime(true).isDstTransitionDay()\n}\n\nQronoDate.prototype.endOfYear = function () {\n  return this.clone({ month: 12, day: 31 })\n}\n\nQronoDate.prototype.endOfMonth = function () {\n  return this.clone({ day: this.daysInMonth() })\n}\n\nQronoDate.prototype.plus = function (...args) {\n  return this[internalDate].datetime.plus(...args).toDate()\n}\n\nQronoDate.prototype.minus = function (...args) {\n  return this[internalDate].datetime.minus(...args).toDate()\n}\n"],
  "mappings": "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",
  "names": ["initialSafeDate", "daysPerWeek", "hoursPerDay", "hoursPerWeek", "minutesPerHour", "minutesPerDay", "minutesPerWeek", "secondsPerMinute", "secondsPerHour", "secondsPerDay", "secondsPerWeek", "millisecondsPerSecond", "millisecondsPerMinute", "millisecondsPerHour", "millisecondsPerDay", "millisecondsPerWeek", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday", "has", "object", "keys", "fields", "value", "isFunction", "key", "given", "arg", "a", "isString", "isObject", "isValidDate", "date", "hasDatetimeField", "object", "has", "asDst", "ambiguousAsDst", "date", "numeric", "result", "adjacentDay", "sign", "adjust", "adjusted", "adjustedUTC", "millisecondsPerMinute", "qrono", "Qrono", "Qrono", "QronoDate", "defaultContext", "fields", "key", "arg", "given", "context", "has", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday", "internal", "args", "self", "set", "parse", "valid", "getNative", "source", "isObject", "hasDatetimeField", "first", "second", "isString", "values", "v", "isValidDate", "name", "baseDate", "newDate", "initialSafeDate", "asDst", "parsePattern", "str", "text", "year", "month", "day", "hour", "minute", "millisecond", "offset", "native", "offsetAbs", "minutesPerHour", "value", "daysPerWeek", "date", "theThursday", "startOfYear", "firstThursday", "currentOffset", "minutesPerDay", "startOfDay", "nextDay", "millisecondsPerMinute", "days", "endOfYear", "endOfLastYear", "another", "a", "b", "plus", "sign", "arg0", "arg1", "timeFields", "utc", "endOfMonth", "lastDay", "nativeKey", "internalDate", "millisecondsPerDay", "qrono", "field", "method"]
}
